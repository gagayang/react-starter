(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["ReduxFalcor"] = factory();
	else
		root["ReduxFalcor"] = factory();
})(this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _actions = __webpack_require__(1);

	var _middleware = __webpack_require__(2);

	var _middleware2 = _interopRequireDefault(_middleware);

	var _reducer = __webpack_require__(3);

	var _reducer2 = _interopRequireDefault(_reducer);

	exports.retrievePath = _actions.retrievePath;
	exports.retrievePaths = _actions.retrievePaths;
	exports.retrieveValue = _actions.retrieveValue;
	exports.setPath = _actions.setPath;
	exports.setPaths = _actions.setPaths;
	exports.callPath = _actions.callPath;
	exports.clear = _actions.clear;
	exports.createFalcorMiddleware = _middleware2['default'];
	exports.falcorReducer = _reducer2['default'];
	exports.RETRIEVE_VALUE = _actions.RETRIEVE_VALUE;
	exports.RETRIEVE_PATH = _actions.RETRIEVE_PATH;
	exports.RETRIEVE_PATHS = _actions.RETRIEVE_PATHS;
	exports.SET_PATH = _actions.SET_PATH;
	exports.SET_PATHS = _actions.SET_PATHS;
	exports.CALL_PATH = _actions.CALL_PATH;
	exports.CLEAR = _actions.CLEAR;

/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports.retrievePath = retrievePath;
	exports.retrievePaths = retrievePaths;
	exports.retrieveValue = retrieveValue;
	exports.setPath = setPath;
	exports.setPaths = setPaths;
	exports.callPath = callPath;
	exports.clear = clear;

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _falcorJsonGraph = __webpack_require__(5);

	var _tinyUuid = __webpack_require__(6);

	var _tinyUuid2 = _interopRequireDefault(_tinyUuid);

	var RETRIEVE_PATH = 'redux-falcor/falcor/RETRIEVE_PATH';
	exports.RETRIEVE_PATH = RETRIEVE_PATH;
	var RETRIEVE_PATHS = 'redux-falcor/falcor/RETRIEVE_PATHS';
	exports.RETRIEVE_PATHS = RETRIEVE_PATHS;
	var RETRIEVE_VALUE = 'redux-falcor/falcor/RETRIEVE_VALUE';
	exports.RETRIEVE_VALUE = RETRIEVE_VALUE;
	var SET_PATH = 'redux-falcor/falcor/SET_PATH';
	exports.SET_PATH = SET_PATH;
	var SET_PATHS = 'redux-falcor/falcor/SET_PATHS';
	exports.SET_PATHS = SET_PATHS;
	var CALL_PATH = 'redux-falcor/falcor/CALL_PATH';
	exports.CALL_PATH = CALL_PATH;
	var CLEAR = 'redux-falcor/falcor/CLEAR';

	exports.CLEAR = CLEAR;

	function retrievePath(path) {
	  return {
	    _id: _tinyUuid2['default'](),
	    type: RETRIEVE_PATH,
	    falcorPath: path,
	    path: path
	  };
	}

	function retrievePaths() {
	  var args = Array.prototype.slice.call(arguments);

	  return {
	    _id: _tinyUuid2['default'](),
	    type: RETRIEVE_PATHS,
	    falcorPath: args,
	    paths: args
	  };
	}

	function retrieveValue(path) {
	  return {
	    _id: _tinyUuid2['default'](),
	    type: RETRIEVE_VALUE,
	    falcorPath: path,
	    path: path
	  };
	}

	function setPath(path, value) {
	  return {
	    _id: _tinyUuid2['default'](),
	    type: SET_PATH,
	    falcorPath: _falcorJsonGraph.pathValue(path, value),
	    path: path,
	    value: value
	  };
	}

	function setPaths() {
	  var args = Array.prototype.slice.call(arguments);

	  return {
	    _id: _tinyUuid2['default'](),
	    type: SET_PATHS,
	    falcorPath: args,
	    paths: args
	  };
	}

	function callPath(path, args, refPaths, thisPaths) {
	  return {
	    _id: _tinyUuid2['default'](),
	    type: CALL_PATH,
	    falcorPath: path,
	    path: path,
	    args: args,
	    refPaths: refPaths,
	    thisPaths: thisPaths
	  };
	}

	function clear() {
	  return { type: CLEAR };
	}

/***/ },
/* 2 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	exports['default'] = createFalcorMiddleware;

	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

	var _actions = __webpack_require__(1);

	function UnrecognizedActionTypeException(message) {
	  this.message = message;
	  this.name = 'UnrecognizedActionTypeException';
	}

	function createFalcorMiddleware(falcor) {
	  return function falcorMiddleware() {
	    return function (next) {
	      return function (action) {
	        var falcorPath = action.falcorPath;
	        var type = action.type;

	        var rest = _objectWithoutProperties(action, ['falcorPath', 'type']);

	        if (!falcorPath) {
	          return next(action);
	        }

	        var SUCCESS = type;
	        var REQUEST = type + '_REQUEST';
	        var FAILURE = type + '_FAILURE';

	        next(_extends({}, rest, { type: REQUEST }));

	        var promise = undefined;

	        switch (type) {
	          case _actions.RETRIEVE_PATH:
	            promise = falcor.get(falcorPath);
	            break;
	          case _actions.RETRIEVE_PATHS:
	            promise = falcor.get.apply(falcor, falcorPath);
	            break;
	          case _actions.RETRIEVE_VALUE:
	            promise = falcor.getValue(falcorPath);
	            break;
	          case _actions.SET_PATH:
	            promise = falcor.set(falcorPath);
	            break;
	          case _actions.SET_PATHS:
	            promise = falcor.set.apply(falcor, falcorPath);
	            break;
	          case _actions.CALL_PATH:
	            var args = rest.args;
	            var refPaths = rest.refPaths,
	                thisPaths = rest.thisPaths;

	            if (!Array.isArray(args)) {
	              args = [args];
	            }

	            if (thisPaths) {
	              promise = falcor.call(falcorPath, args, refPaths, thisPaths);
	            } else if (refPaths) {
	              promise = falcor.call(falcorPath, args, refPaths);
	            } else {
	              promise = falcor.call(falcorPath, args);
	            }

	            break;
	          default:
	            throw new UnrecognizedActionTypeException('Do not know the action, ' + type);
	        }

	        return promise.then(function (res) {
	          next(_extends({}, rest, { res: res, type: SUCCESS }));
	          return res;
	        })['catch'](function (error) {
	          next(_extends({}, rest, { error: error, type: FAILURE }));
	          return error;
	        });
	      };
	    };
	  };
	}

	module.exports = exports['default'];

/***/ },
/* 3 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	exports['default'] = falcorReducer;

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

	var _deepmerge = __webpack_require__(4);

	var _deepmerge2 = _interopRequireDefault(_deepmerge);

	var _actions = __webpack_require__(1);

	function endsWith(subjectString, searchString) {
	  var position = subjectString.length;
	  position -= searchString.length;
	  var lastIndex = subjectString.indexOf(searchString, position);
	  return lastIndex !== -1 && lastIndex === position;
	}

	function omit(object, key) {
	  var _old = object[key];

	  var rest = _objectWithoutProperties(object, [key]);

	  return rest;
	}

	var initialState = { loading: false, _requests: {} };

	function falcorReducer(state, action) {
	  if (state === undefined) state = initialState;
	  var _state$loading = state.loading;
	  var loading = _state$loading === undefined ? false : _state$loading;
	  var _state$_requests = state._requests;

	  var _requests = _state$_requests === undefined ? {} : _state$_requests;

	  if (endsWith(action.type, '_REQUEST')) {
	    var _extends2;

	    return _extends({}, state, { loading: true, _requests: _extends({}, _requests, (_extends2 = {}, _extends2[action._id] = true, _extends2)) });
	  }

	  if (endsWith(action.type, '_FAILURE') || action.type === _actions.RETRIEVE_VALUE) {
	    var requests = omit(_requests, action._id);
	    return _extends({}, state, { loading: Object.keys(requests).length !== 0, _requests: requests });
	  }

	  switch (action.type) {
	    case _actions.RETRIEVE_PATH:
	    case _actions.RETRIEVE_PATHS:
	    case _actions.SET_PATH:
	    case _actions.SET_PATHS:
	    case _actions.CALL_PATH:
	      var requests = omit(_requests, action._id);
	      var newState = _extends({}, state, { loading: Object.keys(requests).length !== 0, _requests: requests });
	      if (!action.res) return newState;
	      return _deepmerge2['default'](newState, action.res.json);

	    case _actions.CLEAR:
	      return { loading: loading, _requests: _requests };

	    default:
	      return state;
	  }
	}

	module.exports = exports['default'];

/***/ },
/* 4 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (root, factory) {
	    if (true) {
	        !(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	    } else if (typeof exports === 'object') {
	        module.exports = factory();
	    } else {
	        root.deepmerge = factory();
	    }
	}(this, function () {

	return function deepmerge(target, src) {
	    var array = Array.isArray(src);
	    var dst = array && [] || {};

	    if (array) {
	        target = target || [];
	        dst = dst.concat(target);
	        src.forEach(function(e, i) {
	            if (typeof dst[i] === 'undefined') {
	                dst[i] = e;
	            } else if (typeof e === 'object') {
	                dst[i] = deepmerge(target[i], e);
	            } else {
	                if (target.indexOf(e) === -1) {
	                    dst.push(e);
	                }
	            }
	        });
	    } else {
	        if (target && typeof target === 'object') {
	            Object.keys(target).forEach(function (key) {
	                dst[key] = target[key];
	            })
	        }
	        Object.keys(src).forEach(function (key) {
	            if (typeof src[key] !== 'object' || !src[key]) {
	                dst[key] = src[key];
	            }
	            else {
	                if (!target[key]) {
	                    dst[key] = src[key];
	                } else {
	                    dst[key] = deepmerge(target[key], src[key]);
	                }
	            }
	        });
	    }

	    return dst;
	}

	}));


/***/ },
/* 5 */
/***/ function(module, exports) {

	function sentinel(type, value, props) {
	    var copy = Object.create(null);
	    if (props != null) {
	        for(var key in props) {
	            copy[key] = props[key];
	        }

	        copy["$type"] = type;
	        copy.value = value;
	        return copy;
	    }
	    else {
	        return { $type: type, value: value };
	    }
	}

	module.exports = {
	    ref: function ref(path, props) {
	        return sentinel("ref", path, props);
	    },
	    atom: function atom(value, props) {
	        return sentinel("atom", value, props);
	    },
	    undefined: function() {
	        return sentinel("atom");
	    },
	    error: function error(errorValue, props) {
	        return sentinel("error", errorValue, props);
	    },
	    pathValue: function pathValue(path, value) {
	        return { path: path, value: value };
	    },
	    pathInvalidation: function pathInvalidation(path) {
	        return { path: path, invalidated: true };
	    }
	};


/***/ },
/* 6 */
/***/ function(module, exports) {

	module.exports = function(a,b){for(b=a='';a++<36;b+=a*51&52?(a^15?8^Math.random()*(a^20?16:4):4).toString(16):'-');return b};


/***/ }
/******/ ])
});
;